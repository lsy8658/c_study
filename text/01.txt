프로그래밍이란 ? )
- 컴퓨터가 작업을 수행하기 위해 일련의 명령을 작성하는 것

-------------------------------------------------------------

프로그래밍 언어 )
- 프로그램을 작성하기 위해 사용되는 언어

1세대 ( 기계어 ex: 0001011 2진수 ) -> 2세대 ( 어셈블리어 ex: ADD AX 0010H ) 
-> ( 컴파일러, 인터프리터)  3세대 ( 고급언어 ex: C, C++, JAVA, Python... ) ->

-------------------------------------------------------------

C 언어의 탄생 )

1960(ALGOL 60 ) -> 1963(CPL) 이때부터 너무 복잡해 시스템 프로그래밍에 적합한 언어를 만들고자했음 
-> 1967(BCPL) -> 1970(B언어) -> 1972(C언어) -> 1978(K&RC) -> 1989(ANSI C(C89)) 언어 표준화 ->  . .
쭉 표준화 진행

-------------------------------------------------------------

C언어의 특징 )

- 범용 고급언어 : 
어디에도 활용가능, 논리적인 처리 구조를 만들 수 있는 데이터 표현 및 흐름 제어
, 여러 가지 유용한 처리를 위한 표준 라이브러리 제공
, 프로그램 이식성이 높음

- 시스템 프로그래밍에 적합한 언어 :
저급언어 수준의 특성이 있으며, 하드웨어 제어에 적합함, 매우 빠른 실행 속도

- 간결한 문법 구조로 되어 있음

-------------------------------------------------------------

프로그램 개발 단계 )

프로그램의 목적 정의 -> 프로그램 설계 -> 소스코드 작성 -> 컴파일 / 링크 ->
프로그램 실행 -> 테스트와 디버깅 -> 유지보수

-------------------------------------------------------------

C프로그램을 실행 파알로 만드는 과정 ) 
1. 코딩 (h,c)
2. 컴파일 (obj) : 빌드라고도 한다.
( 라이브러리 추가 )
3. 링크 (exe)

-------------------------------------------------------------

필요한 도구 )
- 소스 코드 편집기
- 컴파일러
- 링커
- 디버깅 도구    
-> 이것들을 통합개발환경(IDE)라고 부른다. 
대표적으로 이클립스 DEV C++ VScode 등이 있다.

-------------------------------------------------------------

소스 파일 )
- 언어의 문법 및 의미에 맞게 작성된 소스 코드를 담고 있는 파일이다.

목적 파일 )
- 컴파일러에 의해 소스 코드를 기계어(또는 어셈블리어나 기계어로 쉽게 
변환할 수 있는 중간코드 형태일 수도 있음)로 번역한 결과를 담고 있는 파일이다.

-------------------------------------------------------------

컴파일러(compiler) )
- 프로그램 전체 스캔하여 기계어로 번역 
- 시간이 오래걸리지만 전체 실행 시간만 따지고 보면 인터프리터보다 빠르다.
- 단점은 인터프리터보다 많은 메모리 사용, 오류 메세지 생성할 때 
전체 코드를 검사한 후 생성
- 실행 전에 오류를 알 수 있다.
- 대표적인 언어로 C,C++,JAVA 등이 있다.

인터프리터(interpreter) )
- 프로그램 실행시 한번에 한 문장씩 번역
- 메모리 효율이 좋음 왜냐 컴파일러처럼 목적코드를 만들지 않고 
링킹 과정도 안거치기 때문
- 프로그램을 실행시키고 나서 오류를 발견하면 바로 실행을 중지 시킨다
- 실행 후에 오류를 알 수 있다.
- 대표적인 언어로 Python, Ruby, Javascript 등이 있다.


-------------------------------------------------------------

C 프로그램의 기본 구조 )
- 반드시 하나 이상의 함수를 포함
- main() 함수가 반드시 존재
- 시작과 끝 중괄호{} 사용
- 선행처리 지시어를 제외한 문장 끝에 세미콜론!

C프로그램의 구성 요소 )

*C프로그램을 구성하는 토큰의 종류
예약어 (키워드) : C에서 고유한 문법 및 의미가 정해진 단어
명칭 : 변수, 함수 등을 식별하기 위해 정의하는 이름
상수 : 값이 변하지 않는 자료
문자열 : 큰따옴표로 묶인 문자 시퀀스
구두점 : 고유한 문법 및 의미가 정해진 기호 (=,+,-,/ 등의 연산자나 ; , 괄호 등의 구분자)
설명문 : 주석 /* */ or //

예약어 : C에서 고유한 문법 및 의미가 정해진 단어
- 정해진 용도가 아닌 다른 용도로는 사용할 수 없음

예약어의 종류 :
- 자료형 관련 예약어 : char, int, float, short, long, double 등 ...
- 기억 관련 예약어 : auto, static, extern, register 등 ...
- 제어 관련 예약어 : if, else, switch 등 ...

명칭 : 프로그램 내의 여러가지 요소를 식별하기 위해 정의함
- 변수, 함수 등
명칭 정의 규칙 :
- 영문자와 숫자의 조합으로 만든다.
- 명칭의 첫 문자는 영문자나 밑줄 '_' 이어야 한다.
- 특수문자를 사용할 수 없다. 
- 문자 사이에 공백이 있어서는 안된다.
- 예약어를 사용할 수 없다.

연산자 (operator)

설명문 (comment, 주석문)
- 프로그램에 대한 설명을 작성하는 문장 => 주석

-------------------------------------------------------------

** 정리 **

1. C 언어는 범용 고급언어이면서 저급언어 수준의 특성이 있어 
시스템 프로그래밍에 적합한 언어이다.

2. C 프로그램은 소스 파일을 작성한 다음 /* 컴파일과 링크 과정 */을 통해 실행 파일로 변환된다.

3. C 프로그램 개발에 필요한 도구를 모아 놓은 통합개발환경(IDE)을 이용하여
편리하게 프로그램을 작성할 수 있다.

4. C 프로그램은 1개 이상의 함수로 구성되며, 기본적으로 main() 함수를 작성한다.


================================================================

- 소스 파일(source file)

 : 언어의 문법 및 의미에 맞게 작성된 소스 코드를 담고 있는 파일이다.

- 목적 파일(object file)

 : 컴파일러에 의해 소스 코드를 기계어(또는 어셈블리어나 기계어로 쉽게 변환할 수 있는
 중간코드 형태일 수도 있음)로 번역한 결과를 담고 있는 파일이다.

- 컴파일러(compiler)

 : 고급 프로그래밍 언어로 작성된 프로그램을 번역하여 목적 파일을 생성하는 번역기 프로그램이다.

- 링커(linker)

 : 여러 목적 파일과 라이브러리를 연결하여 실행 파일을 만드는 역할을 하는 도구이다.

- 빌드(build)

 : 프로그램의 소스 파일을 실행 파일로 변환하는 제반 과정을 의미하는데, 컴파일이 필요한 소스 파일들을 컴파일하고, 그 결과와 라이브러리 등을 링크하는 처리를 포함한다. 통합개발환경

- 통합개발환경(integrated development environment, IDE)

 : 컴퓨터 프로그램을 만드는 데 필요한 소스 파일 편집기, 컴파일러, 링커, 디버깅 도구 등 소프트웨어 개발에 필요한 도구를 모아 놓은 소프트웨어이다.

- 예약어(reserved word, 키워드)
 : 프로그래밍 언어에서 고유한 문법 및 의미가 미리 정해진 단어이다.

- 명칭(identifier, 식별자)
 : 프로그램 내의 변수, 함수 등의 여러 가지 요소를 식별하기 위해 정의한 이름을 의미한다.

- 토큰(token)
 : 프로그래밍 언어에서 가장 작은 의미 단위로 분해한 조각을 의미하는 것으로 예약어, 명칭, 상수, 구두점 등이 토큰에 해당된다.

- 에러(error)
 : 소스 코드에서 문법에 맞지 않거나 꼭 필요한 요소가 누락되어 프로그램을 정상적으로 빌드할 수 없는 원인이 되는 것을 의미한다.

- 경고(warning)
 : 소스 코드에서 빌드를 진행할 수는 있지만, 문제의 가능성이 있는 부분에 대해 발생할 문제점을 예방할 수 있도록 알리는 메시지를 의미한다.