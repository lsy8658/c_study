C 프로그램과 함수 )
- 특정 작업 ( 기능 )을 수행하도록 설계된 코드 블록
처리할 데이터 -> 함수 -> 처리 결과

-------------------------------------------------------------

#include <stdio.h>
#include <stdlib.h>
int main () {

}

EXIT_SUCCESS == 0

-------------------------------------------------------------
표준 입출력 이란 (standard input / output )? )
- 프로그램이 사용자와 데이터를 주고받는 기본적인 입력과 출력장치
데어터의 형태 : 문자 시퀀스

표준 입력 (stdin) - 키보드
scanf(), getchar(), gets() 
/ 형식을 갖춰 입력, 문자 하나 입력, 문자열을 입력

표준 출력 (stdout) - 터미널
printf(), putchar(), puts() 
/ 형식을 갖춰 출력, 문자 하나 출력, 문자열을 출력

-------------------------------------------------------------

형식화된 출력 함수 printf()

printf("출력양식")
printf("출력양식", 수식1[, 수식2...])

printf("A 를 출력해 문자열 -> %c과 정수형 -> %d 으로", 'A', 'A');
=> A, 65(%d 로 문자를 출력하면 ASCII 값으로 나옴)

이러한 %c 나 %d 를 출력 양식 변환기호라고 한다.~!


정수 출력 - short, int, long, long long

%d 부호 있는 10진 정수( signed int )로 변환하여 출력
%u 부호 없는 10진 정수 ( unsigned int )로 변환하여 출력
%o 부호 없는 8진수로 변롼하여 출력
%x, %X 부호 없는 16진수로 변환하여 출력 ( a ~ f 까지 소문자, 대 문자 )

변환기호 앞에 h를 추가하면 short int를,
l 을 추가하면 long을,
ll 을 추가하면 long long 을 출력함
예 ) %hd, %ld, %llx

문자 출력 - char 
%c 한 개의 문자 출력

문자열 출력 - char*
%s - 널 문자 \0 로 끝나는 문자열을 출력

실수 출력 - float, double

%f - 일반적인 소수점 형식으로 변환하여 출력
%e, %E 지수 형식으로 변환하여 출력[-]d ddd dd~~~
%g, %G - 소수점 형식 또는 지수 형식 중 간결한 형식으로 출력


printf("%d\n", 0x10) // 16
printf("%x\n", 125) // 7d
printf("%X\n", 125) //7D
printf("%o\n", 125) // 175

출력 양식 변환기호 활용 예 - 문자 및 문자열
printf("%c\n", 'A') // 'A'
printf("%c\n", 0x42) //'B'
printf("%s\n", "KNOU") // "KNOU"
printf("%s\n", "ab\0cd") //"ab"

printf("%f\n", 12.34f)
printf("%f\n")

등등 많음
-------------------------------------------------------------
\0 <- null 코드임

-------------------------------------------------------------
플래그 - 양식의 수정
- '-' 좌측 정렬
- '+' 부호출력
- ' ' 부로 자리 확보
- '0' 앞의 빈 자리를 '0'으로 채움

출력을 위한 최소 자릿수를 나타내는 정수

'.' 소수점 이하 자릿수를 구분하는 기호

최대 유효자릿수를 나타내는 정수

-------------------------------------------------------------
| | 이건 자릿수 구분 쉽게하기 위한것

정수형 

printf("|%d|\n", 123); // |123|
printf("|% d|\n", 123); // | 123|
printf("|%+2d|\n", +123); // 저기서 + 의 의미는 +- 상관없이 부호를 
 출력해라! 2자리를 확보 근데 4자리를 출력하래.. 근데 여기서 2의 의미는 최소 2자리 임으로 
 다 출력함 |+123|
printf("|% d|\n", 123); // | 123|
printf("|%5d|\n", 123) // 5자리를 확보해서 출력하라! |  123|
printf("|%-5d|\n", 123) // 5자리를 확보해서 출력하라! |123  | -는 좌측정렬을 의미
printf("|%+5d|\n", 123) // | +123|
printf("|%+05d|\n", 123) // |+0123|


실수형 

printf("%|10f|\n", 123.456) // |123.456000| <- 10자리에 맞춰 실수를 출력 
printf("|%10.1f|"\n, 123.456) // |     123.5| 10자리 확보 후 오른쪽에서 출력 (10.1) 10자리 소수점은 1자리까지만
printf("|% 10.4e|\n", 123.456) // 여기서 e는 지수 | 1.23456e+02|
printf("|% 10.4e|\n", -123.456) // 여기서 e는 지수 |-1.23456e+02|
printf("|%10.4g|\n", 123.456) // |     123.5|


====================================================================
scanf() 함수의 용도
- 지정된 양식으로 값을 입력하여 변수 ( 기억공간 )에 저장함

형식 : scanf("입력양식", &변수1[, &변수2 ...])

변수 : 값을 저장할 변수의 주소가 필요하므로 주소 연산자 & 를 사용함.

정수 입력 - short, int, long, long long

%d : 부호 있는  10진 정수 (signed int)로 변환하여 입력
%i : 부호 있는 정수 : 10진수, 8진수(예:012), 16진수 (예: 0x41)
%u : 부호 없는 10진 정수 (unsigned int)로 변환하여 입력
%o : 8진수 입력 ( 예 : 12 또는 012 )
%x : 16진수 입력 ( 예 : 41 또는  0x41 )

변환기호 앞에 h를 추가하면 short int를, 
l을 추가하면 long ll을 추가하면 long long을 입력함


입력 양식변환 기호 

문자 입력 - char ( 변환기호  %c)
문자열 입력 - char* ( 변환기호  %s) 
====================================================================

- 표준 입출력
 : 프로그램이 사용자와 데이터를 주고받는 기본적인 입출력으로, 키보드나 단말기 화면과 같은 기본 장치를 통해 데이터를 입력하거나 출력한다.
- 형식화 입출력
 : 양식을 지정하여 정해진 형식에 맞게 입력이나 출력하는 것을 의한다.
- 널(null) 문자
 : 문자코드 0번에 해당되는 문자(''\0')로, 문자열의 끝을 알리는 용도로 사용한다.

---------------------------------------------------------------------

 scanf("%lf", &x);

double형 값을 입력하기 위해서는 %lf 기호를 사용한다. 값을 입력할 변수는 
scanf() 함수에 변수의 주소를 알려줘야 하며, 이를 위해 주소 연산자 ‘&’를 사용한다. 
%d와 %ld는 각각 int 및 long int의 입력을 위한 기호이며, %f는 float형 값을 입력하는 기호이다.

---------------------------------------------------------------------

printf() 함수의 출력양식 변환 기호 중 16진수 정수 출력을 위해 사용할 수 있는 기호는? => %x

10진수 정수 출력은 %d, 
8진수 정수 출력은 %o, 
16진수 정수 출력은 %x 기호를 사용한다. 
%f 및 %g는 실수 출력에 사용되는 변환 기호이다.

---------------------------------------------------------------------
다음 중 stdin으로부터 행의 끝까지 문자열을 입력하고자 할 때 사용할 수 있는 함수는?

1 )
getchar()

2 )
gets()

3 )
putchar()

4 )
puts()

정답 : 2
getchar()은 stdin에서 한 개의 문자를 입력하는 함수이다. 
gets()는 stdin에서 문자열을 입력하는 함수로, 현재 행의 끝까지의 문자들을 모두 입력한다. 
putchar(), puts() 함수는 문자 및 문자열을 stdout에 출력하는 함수이다.

