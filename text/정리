( 주요용어 주요용어 )

- 자료형(data type)
 : 컴퓨터에서 표현할 수 있는 값의 종류를 정의한 것으로, 
 값의 표현 방법, 메모리 크기, 사용할 수 있는 연산 등의 정의가 포함된다.

- 부동소수점(floating-point)
 : 컴퓨터의 수 표현 방식 중 소수점의 위치가 고정되지 않고, 
 지수의 값에 따라 이동할 수 있는 실수 표현 방식으로, 
 매우 큰 수부터 매우 미세한 수에 이르는 넓은 범위의 수를 표현할 수 있다.

- 상수(constant)
 : 변하지 않는 고정된 값을 표현하는 자료이다.

- 변수(variable)
 : 프로그램에서 값을 저장하기 위한 기억공간으로, 
 사용하기 전에 다른 변수와 구분할 수 있는 이름과 자료형을 지정하여 미리 선언한다.

- 변수의 초기화
 : 변수가 생성될 때 적절한 기본값을 설정하는 처리이다.

- 오버플로(overflow)
 : 연산 결과의 크기가 너무 커서 자료형이 표현할 수 있는 값의 
 범위를 벗어나 실제와 다른 값으로 표현되는 문제이다.

- 언더플로(underflow)
 : 연산 결과의 크기가 너무 작아져서 정확하게 표현되지 못하게 되는 문제이다.

- 선행처리
 : 실제 컴파일 단계 이전에 소스코드를 적절히 가공함으로써 
 실제로 컴파일될 코드를 만들어 내는 처리이다.

- 매크로(macro)
 : 반복적으로 사용되는 코드에 이름을 붙여 정의한 것으로, 
 프로그램 중 미리 정의된 매크로를 사용하면 해당 코드로 치환된다.


==================================================================================

 C 언어에서 부동소수점 방식으로 수를 표현하는 자료형은 float, double, long double 등이 있다. 
 short int, int, long int, long long int 등은 정수를 표현하는 자료형이며, 
 그 앞에 unsigned를 지정하면 음수가 아닌 정수만을 표현하게 된다. 
 char은 문자를 표현하기 위한 자료형이지만, 정수 형태의 코드로 표현되므로 정수형과 유사하게 취급할 수 있다.

-----------------------------------------------------------

 enum sports { SOCCER, BASEBALL, TENNIS, BASKETBALL }
나열된 단어를 값으로 사용하는 열거형 자료형인 sports를 선언한 것이다. 
제일 앞에 있는 SOCCER는 0, BASEBALL은 1, TENNISS는 2, BASKETBALL은 3이라는 
정수를 표현하는 값으로 사용된다.

-----------------------------------------------------------

1. 1230
2. 1230.f
3. 1.23e+3
4. 0.123e-4
1230.0이라는 표현은 double형 상수이다. ①은 정수형, ②는 float형을 나타내므로 자료형이 다르다. 
이 값은 1.23×103과 동일하며, 이를 C 언어의 부동소수점 표현으로 쓰면 ③과 같다.

-----------------------------------------------------------

모든 변수는 사용하기 전에 자료형과 이름을 정하여 선언하여야 하며, 
해당되는 자료형의 값을 저장할 수 있고, 프로그램의 실행에 따라 값을 변경할 수 있다. 
변수는 자료형에 따라 정해지는 크기의 메모리를 사용하며, 자료형이 표현할 수 있는 
최대 범위를 넘어서는 값을 넣을 경우 오버플로가 발생하여 실제 값과 완전히 다른 값이 될 수 있어 
연산 등의 결과가 오버플로가 발생할 수 있는지를 염두에 두어야 한다.

-----------------------------------------------------------

지역변수는 특정 블록에 선언된 변수이며, 프로그램의 전체 영역에서 사용할 수 있는 
전역변수와는 달리 소속된 블록 밖에서는 사용할 수 없다. 서로 다른 블록에서 지역변수를 
선언할 때는 다른 블록과 무관하게 선언하여 사용할 수 있어 이름이 동일해도 별개로 취급된다. 
모든 변수는 사용하기 전에 선언되어 있어야 한다.

-----------------------------------------------------------

선행처리 지시어는 ‘#’ 문자로 시작하며, 한 행에 한 개의 문장을 작성한다. 
일반적인 C 언어의 문장과는 달리 문장의 끝에 ‘;’을 사용하지 않는다. 
#include는 헤더파일의 내용을 현 위치에 삽입하는 역할을 하며, 
조건부 컴파일을 위해서는 #if, #elif, #else, #endif 등의 지시어를 사용하며, 
#define은 매크로를 선언하는데 사용한다.

-----------------------------------------------------------
프로그래밍 언어에서는 값을 저장하거나 계산을 할 때 자료형을 엄격하게 구분하여 처리한다.

C 언어의 자료형에는 정수, 실수, 문자를 표현하는 기본형과 열거형, 파생형이 있다.

문자형과 정수형은 정수 형태의 값을 표현하며 자료형에 따라 1, 2, 4, 8바이트의 메모리에 값을 저장한다. int형은 컴퓨터에서 가장 효율적인 처리를 할 수 있는 단어(word)의 크기로 저장한다.

실수형은 부동소숫점 표현방식의 자료형이다.

열거형은 나열된 단어를 값으로 사용하는 자료형으로, 나열된 순서대로 0부터 시작하는 정수를 표현한다.

상수는 항상 고정된 값을 갖는 자료로, 자료형에 따라 정해진 문법에 따라 표기한다.

변수는 프로그램에서 값을 저장하기 위한 기억공간으로, 사용하기 전에 이름과 자료형을 지정하여 선언한다.

선행처리는 컴파일에 앞서 소스 프로그램을 가공하여 컴파일러가 실제로 번역할 소스 프로그램을 만드는 것이다.

대표적인 선행처리에는 헤더파일 포함, 매크로 선언, 조건부 컴파일 등이 있다.